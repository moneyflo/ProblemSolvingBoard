# -*- coding: utf-8 -*-
"""bj16916.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nEvVJWB1WJNTo10d_rXMUrvNDufJVp9Y
"""

# no.16916 부분 문자열

S = input()
P = input()

first = P[0]

start = 0

while 1:
    if len(P) == 1:
        print(0)
        break
    if start+len(P) <= len(S):
        try:
            tmp = S[start:].index(first)
            start = tmp
            if S[start:start+len(P)] == P:
                print(1)
                break
            else:
                start += len(P)
        except:
            print(0)
            break
    else:
        print(0)
        break

# kmp 알고리즘으로 재시도

def KMPSearch(pat, txt):
    M = len(pat)
    N = len(txt)

    lps = [0]*M

    computeLPS(pat, lps)

    i = 0 
    j = 0
    while i < N:
        if pat[j] == txt[i]:
            i += 1
            j += 1
        elif pat[j] != txt[i]:
            if j != 0:
                j = lps[j-1]
            else:
                i += 1

        if j == M:
            return 1
            # j = lps[j-1]

def computeLPS(pat, lps):
    leng = 0 

    i = 1
    while i < len(pat):
        if pat[i] == pat[leng]:
            leng += 1
            lps[i] = leng
            i += 1
        else:
            if leng != 0:
                leng = lps[leng-1]
            else:
                lps[i] = 0
                i += 1

S = input()
P = input()

if KMPSearch(P, S):
    print(1)
else:
    print(0)

# baekjoon에 있던 풀이;;;
s=input()
print(+(input()in s))