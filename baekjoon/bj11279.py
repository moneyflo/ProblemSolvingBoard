# -*- coding: utf-8 -*-
"""bj11279.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D5u-WGhlhMHWkwLZMYkRS2W8RpteA-nd
"""

# no.11279 최대 힙

class MaxHeap:
    def __init__(self):
        self.heap = []
        self.heap.append(0)

    def size(self): return len(self.heap) - 1
    def isEmpty(self): return self.size() == 0
    def Parent(self, i): return self.heap[i//2]
    def Left(self, i): return self.heap[i*2]
    def Right(self, i): return self.heap[i*2 + 1]
    def insert(self, n):
        self.heap.append(n)
        i = self.size()
        while i != 1 and n > self.Parent(i):
            self.heap[i] = self.Parent(i)
            i = i // 2
        self.heap[i] = n

    def delete(self):
        parent = 1
        child = 2

        if not self.isEmpty():
            hroot = self.heap[1]
            last = self.heap[self.size()]
            while child <= self.size():
                if child < self.size() and self.Left(parent) < self.Right(parent):
                    child += 1
                if last >= self.heap[child]:
                    break
                self.heap[parent] = self.heap[child]
                parent = child
                child *= 2

            self.heap[parent] = last
            self.heap.pop(-1)
            return hroot
        else:
            return 0


N = int(input())
mh = MaxHeap()

for _ in range(N):
    n = int(input())
    if n == 0:
        n1 = mh.delete()
        print(n1)
    else:
        mh.insert(n)

"""힙 모듈 사용"""

import heapq

heap = []

N = int(input())

for _ in range(N):
    n = int(input())
    if n == 0:
        if heap:
            tmp = heapq.heappop(heap)[1]
            print(tmp)
        else:
            print(0)
    else:
        heapq.heappush(heap, (-n, n))

a = []

heapq.heappush(a, 1)
heapq.heappop(a
